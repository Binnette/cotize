apply plugin: 'java'
apply plugin: 'application'

version = '1.0-SNAPSHOT'

mainClassName = "net.bons.comptes.Cotize"

applicationDefaultJvmArgs = ["-Dvertx.cacheDirBase=${buildDir}/vertx-cache -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory -config /home/michel/cotize.json"]

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

def generateSrcPath="$buildDir/generated-src"
def generatedSrcDir = file("$buildDir/generated-src")


sourceSets {
    main {
        java.srcDirs += generatedSrcDir
        output.dir(builtBy: 'generateServiceProxy', generateSrcPath)
    }
}

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }
}

task stage << {
    def procfile = new File("Procfile")
    procfile.delete()
    procfile << "web:    build/install/${rootProject.name}/bin/${rootProject.name}\n"

    def systemProperties = new File("system.properties")
    systemProperties.delete()
    systemProperties << "java.runtime.version=${sourceCompatibility}\n"
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = generatedSrcDir
    options.compilerArgs = [

            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",

            "-AoutputDirectory=$generateSrcPath"
    ]
}

compileJava.dependsOn generateServiceProxy

stage.dependsOn installDist

repositories {
    mavenCentral()
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()
    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor -> logger.lifecycle("Running test: " + descriptor) }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}

dependencies {
    def vertxVersion = '3.2.0'
    compile(
            [group: 'io.reactivex', name: 'rxjava', version: '1.1.0'],
            //[group: 'com.google.guava', name: 'guava', version: '18.0'],
            [group: 'io.vertx', name: 'vertx-core', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-web', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-codegen', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-mongo-client', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-mail-client', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-service-proxy', version: vertxVersion],
            [group: 'io.vertx', name: 'vertx-rx-java', version: vertxVersion],
            [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'],
            [group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3'],
            [group: 'com.google.code.gson', name: 'gson', version: '2.5'],
            [group: 'org.hibernate', name: 'hibernate-validator', version: '5.2.2.Final'],
            [group: 'javax.el', name: 'javax.el-api', version: '2.2.4'],
            [group: 'org.glassfish.web', name: 'javax.el', version: '2.2.4'],
            [group: 'com.google.inject', name: 'guice', version: '4.0'],
            [group: 'com.javaslang', name: 'javaslang', version: '2.0.0-RC3']
    )

    testCompile(
            [group: 'org.assertj', name: 'assertj-core', version: '3.2.0'],
            [group: 'org.testng', name: 'testng', version: '6.8.21'],
            [group: 'org.mockito', name: 'mockito-core', version: '1.+'],
            [group: 'io.vertx', name: 'vertx-unit', version: vertxVersion],
    )
}
